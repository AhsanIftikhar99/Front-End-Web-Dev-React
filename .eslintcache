[{"D:\\Ristore-Confusion\\src\\index.js":"1","D:\\Ristore-Confusion\\src\\App.js":"2","D:\\Ristore-Confusion\\src\\reportWebVitals.js":"3","D:\\Ristore-Confusion\\src\\redux\\configureStore.js":"4","D:\\Ristore-Confusion\\src\\components\\MainComponent.js":"5","D:\\Ristore-Confusion\\src\\redux\\dishes.js":"6","D:\\Ristore-Confusion\\src\\redux\\comments.js":"7","D:\\Ristore-Confusion\\src\\redux\\promotions.js":"8","D:\\Ristore-Confusion\\src\\redux\\leaders.js":"9","D:\\Ristore-Confusion\\src\\redux\\forms.js":"10","D:\\Ristore-Confusion\\src\\components\\HomeComponent.js":"11","D:\\Ristore-Confusion\\src\\components\\ContactComponent.js":"12","D:\\Ristore-Confusion\\src\\components\\MenuComponent.js":"13","D:\\Ristore-Confusion\\src\\components\\dishdetailcomponent.js":"14","D:\\Ristore-Confusion\\src\\components\\Aboutcomponent.js":"15","D:\\Ristore-Confusion\\src\\components\\FooterComponent.js":"16","D:\\Ristore-Confusion\\src\\components\\HeaderComponent.js":"17","D:\\Ristore-Confusion\\src\\redux\\ActionCreators.js":"18","D:\\Ristore-Confusion\\src\\redux\\ActionTypes.js":"19","D:\\Ristore-Confusion\\src\\components\\LoadingComponent.js":"20","D:\\Ristore-Confusion\\src\\components\\shared\\promotions.js":"21","D:\\Ristore-Confusion\\src\\components\\shared\\comments.js":"22","D:\\Ristore-Confusion\\src\\components\\shared\\leaders.js":"23","D:\\Ristore-Confusion\\src\\components\\shared\\dishes.js":"24","D:\\Ristore-Confusion\\src\\components\\shared\\baseUrl.js":"25"},{"size":619,"mtime":1631225785000,"results":"26","hashOfConfig":"27"},{"size":526,"mtime":1631225785000,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1631225785000,"results":"29","hashOfConfig":"27"},{"size":760,"mtime":1631225785000,"results":"30","hashOfConfig":"27"},{"size":3043,"mtime":1634635425958,"results":"31","hashOfConfig":"27"},{"size":580,"mtime":1631225785000,"results":"32","hashOfConfig":"27"},{"size":615,"mtime":1634628857977,"results":"33","hashOfConfig":"27"},{"size":665,"mtime":1634628946951,"results":"34","hashOfConfig":"27"},{"size":188,"mtime":1631225785000,"results":"35","hashOfConfig":"27"},{"size":162,"mtime":1631225785000,"results":"36","hashOfConfig":"27"},{"size":1696,"mtime":1634637044092,"results":"37","hashOfConfig":"27"},{"size":10825,"mtime":1631225785000,"results":"38","hashOfConfig":"27"},{"size":1844,"mtime":1634637046184,"results":"39","hashOfConfig":"27"},{"size":7793,"mtime":1634631142747,"results":"40","hashOfConfig":"27"},{"size":4175,"mtime":1631225785000,"results":"41","hashOfConfig":"27"},{"size":2688,"mtime":1631225785000,"results":"42","hashOfConfig":"27"},{"size":2513,"mtime":1631225785000,"results":"43","hashOfConfig":"27"},{"size":1812,"mtime":1634628837257,"results":"44","hashOfConfig":"27"},{"size":403,"mtime":1633639774447,"results":"45","hashOfConfig":"27"},{"size":247,"mtime":1631225785000,"results":"46","hashOfConfig":"27"},{"size":435,"mtime":1631225785000,"results":"47","hashOfConfig":"27"},{"size":4118,"mtime":1631225785000,"results":"48","hashOfConfig":"27"},{"size":2345,"mtime":1631225785000,"results":"49","hashOfConfig":"27"},{"size":1448,"mtime":1631225785000,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1633642187571,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1mv5ujr",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\Ristore-Confusion\\src\\index.js",[],["106","107"],"D:\\Ristore-Confusion\\src\\App.js",[],"D:\\Ristore-Confusion\\src\\reportWebVitals.js",[],"D:\\Ristore-Confusion\\src\\redux\\configureStore.js",[],"D:\\Ristore-Confusion\\src\\components\\MainComponent.js",["108"],"D:\\Ristore-Confusion\\src\\redux\\dishes.js",[],"D:\\Ristore-Confusion\\src\\redux\\comments.js",[],"D:\\Ristore-Confusion\\src\\redux\\promotions.js",[],"D:\\Ristore-Confusion\\src\\redux\\leaders.js",[],"D:\\Ristore-Confusion\\src\\redux\\forms.js",[],"D:\\Ristore-Confusion\\src\\components\\HomeComponent.js",[],"D:\\Ristore-Confusion\\src\\components\\ContactComponent.js",["109","110","111","112","113","114","115","116"],"import React,{Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem,Button, Row, Col, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        // event.preventDefault();\n    }\n    \n    \n\n    render()\n    {\n    \n        return(\n            <div className=\"container\">\n                 <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"Skype\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: ' Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Contact;","D:\\Ristore-Confusion\\src\\components\\MenuComponent.js",[],"D:\\Ristore-Confusion\\src\\components\\dishdetailcomponent.js",["117","118","119"],"import React, { Component } from \"react\";\nimport { Card, CardImg, CardBody,CardText, Button, Modal, ModalHeader, ModalBody,\n    Label, Row, Col, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from './shared/baseUrl';\n\nfunction RenderDish({dish}) {\n    if (dish != null) {\n        return(\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n        )\n    }\n    else{\n        return(\n            <div></div>\n        )\n    }\n}\n\nfunction RenderComments({comments, addComment, dishId}) {\n    console.log(comments);\n    if (comments != null) {\n\n        let list = comments.map((comment)=>{\n\n            return(\n                <li key={comment.id} >\n                    <div>\n                        <p>{comment.comment}</p>\n                        <p>--{comment.author},\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                    </div>\n                </li>\n\n            )\n        })\n\n        return(\n                <div>\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        {list}\n                    </ul>\n                    <CommentForm dishId={dishId} addComment={addComment}>\n\n                    </CommentForm>\n                </div>\n        )\n    }\n    else{\n        return(\n            <div></div>\n        )\n    }\n}\n\nconst Dishdetail = (props) => {\n    //console.log(props.comments);\n    if(props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );        \n    }\n\n    else if(props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    else if(props.dish != null)\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish}/>\n                </div>\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id}/>\n                </div>            \n            </div>\n            </div>\n        )\n\n    else \n        return(\n            <div></div>\n        );\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length < len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            isModelOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.hadnleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModelOpen: !this.state.isModelOpen\n        });\n    }\n\n    hadnleSubmit(values) {\n\n        this.toggleModal();\n\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-edit fa-lg\"></span> Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.hadnleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label for=\"rating\" md={12}>rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \n                                    placeholder=\"Author\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                        minLength: minLength(3),\n                                        maxLength: maxLength(15)\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Should have more than 3 Characters',\n                                        maxLength: 'Should have 15 or less Characters'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={12}>Your feedback</Label>\n                                <Col md={12}>\n                                <Control.text model=\".comment\" id=\"comment\" name=\"comment\" \n                                    resize=\"none\"\n                                    rows=\"12\" \n                                    className=\"form-control\" \n                                    validators={{\n                                        required,\n                                    }} \n                                />\n                                <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\n                                    messages={{\n                                        required: 'Required'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>                            \n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n\nexport default Dishdetail;","D:\\Ristore-Confusion\\src\\components\\Aboutcomponent.js",[],"D:\\Ristore-Confusion\\src\\components\\FooterComponent.js",[],"D:\\Ristore-Confusion\\src\\components\\HeaderComponent.js",[],"D:\\Ristore-Confusion\\src\\redux\\ActionCreators.js",["120"],"import * as ActionTypes from \"./ActionTypes\";\nimport { DISHES } from '../components/shared/dishes';\nimport { baseUrl } from \"../components/shared/baseUrl\";\nexport const addComment = (dishId ,rating , author , comment) =>\n({\n    \n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    \n});\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)));\n}\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n","D:\\Ristore-Confusion\\src\\redux\\ActionTypes.js",[],"D:\\Ristore-Confusion\\src\\components\\LoadingComponent.js",[],"D:\\Ristore-Confusion\\src\\components\\shared\\promotions.js",[],"D:\\Ristore-Confusion\\src\\components\\shared\\comments.js",[],"D:\\Ristore-Confusion\\src\\components\\shared\\leaders.js",[],"D:\\Ristore-Confusion\\src\\components\\shared\\dishes.js",[],"D:\\Ristore-Confusion\\src\\components\\shared\\baseUrl.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":34,"column":3,"nodeType":"127","messageId":"128","endLine":37,"endColumn":4},{"ruleId":"129","severity":1,"message":"130","line":4,"column":33,"nodeType":"131","messageId":"132","endLine":4,"endColumn":40},{"ruleId":"133","severity":1,"message":"134","line":79,"column":37,"nodeType":"135","endLine":85,"endColumn":44},{"ruleId":"133","severity":1,"message":"134","line":101,"column":37,"nodeType":"135","endLine":107,"endColumn":44},{"ruleId":"133","severity":1,"message":"134","line":123,"column":37,"nodeType":"135","endLine":129,"endColumn":44},{"ruleId":"133","severity":1,"message":"134","line":146,"column":37,"nodeType":"135","endLine":152,"endColumn":44},{"ruleId":"133","severity":1,"message":"136","line":168,"column":45,"nodeType":"135","endLine":170,"endColumn":52},{"ruleId":"133","severity":1,"message":"137","line":176,"column":37,"nodeType":"135","endLine":177,"endColumn":66},{"ruleId":"133","severity":1,"message":"138","line":186,"column":37,"nodeType":"135","endLine":189,"endColumn":39},{"ruleId":"133","severity":1,"message":"137","line":160,"column":37,"nodeType":"135","endLine":160,"endColumn":108},{"ruleId":"133","severity":1,"message":"134","line":172,"column":33,"nodeType":"135","endLine":180,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":193,"column":33,"nodeType":"135","endLine":200,"endColumn":35},{"ruleId":"129","severity":1,"message":"139","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]